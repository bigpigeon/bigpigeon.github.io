<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>运维 on bigpigeon</title>
    <link>https://bigpigeon.org/tags/%E8%BF%90%E7%BB%B4/</link>
    <description>Recent content in 运维 on bigpigeon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn-zh</language>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Tue, 27 Dec 2016 17:07:00 +0800</lastBuildDate>
    
	<atom:link href="https://bigpigeon.org/tags/%E8%BF%90%E7%BB%B4/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>我的翻墙技术栈</title>
      <link>https://bigpigeon.org/post/my-skip-gfw-stack/</link>
      <pubDate>Tue, 27 Dec 2016 17:07:00 +0800</pubDate>
      
      <guid>https://bigpigeon.org/post/my-skip-gfw-stack/</guid>
      <description>&lt;p&gt;谈到翻墙，很多人第一时间想到的就是shdowsocks，虽然简单的搭建一个shadowsocks服务就可以实现翻墙，不过很快你就会发现代理的速度并不理想，而且有时会发生长时间无法链接的情况。&lt;/p&gt;

&lt;p&gt;这是因为网络有的错误丢包被当成拥塞丢包，所以发送窗口一直没法增大。&lt;/p&gt;

&lt;p&gt;linux kernel 4.9支持BBR拥塞控制算法可以解决这个问题&lt;/p&gt;

&lt;p&gt;也可以通过其他协议工具比如:&lt;a href=&#34;https://github.com/xtaci/kcptun&#34;&gt;kcptun&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;kcptun可以提供双边加速和窗口控制，效果可能比bbr好&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用docker部署jekyll</title>
      <link>https://bigpigeon.org/post/docker-and-jekyll/</link>
      <pubDate>Sat, 06 Feb 2016 14:06:00 +0800</pubDate>
      
      <guid>https://bigpigeon.org/post/docker-and-jekyll/</guid>
      <description>&lt;p&gt;关于在docker部署jekyll在&lt;a href=&#34;http://books.linuxfocus.net/files/books/James.Turnbull.The.Docker.Book.Containerization.is.the.new.virtualization.B00LRROTI4.pdf&#34;&gt;The.Docker.Book&lt;/a&gt;中也有详细说明，但主要是自从jekyll升级到需要ruby2.0+版本后就没那么容易了&lt;/p&gt;

&lt;p&gt;所以我在这记录一下部署过程以免将来再次踩坑&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>